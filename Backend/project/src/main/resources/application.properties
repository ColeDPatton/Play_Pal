
# Specify the url to your mysql server:
# Hostname can be localhost or your teams remote server (e.g. proj309-mg-01.misc.iastate.edu)
# Port should be 3306
# Keep the parameters after the '?' to avoid a jdbc warning
# Text after last '/' is the database. This should be created in your mysql server.
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/PlayPal?verifyServerCertificate=false&useSSL=false&requireSSL=false&allowPublicKeyRetrieval=true
 
# user for mysql server
spring.datasource.username=root

# password to mysql server
spring.datasource.password=Kelsey!7

# this is the port your web server will run on
server.port=8080

# JPA
# This tells jdbc to create the tables if they do not already exist
# Defaults to none, in which case you must make the tables to match the Entity owners
# Run the 'src/main/resources/db/mysql/data.sql' script in MySQL workbench or CLI to insert dummy data
spring.jpa.hibernate.ddl-auto=update


logging.file=application.log

# Logging
logging.level.org.springframework=INFO
#logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

# Internationalization
#spring.messages.basename=messages/messages

# Actuator / Management
#management.endpoints.web.base-path=/manage

# Spring Boot 1.5 makes actuator secure by default
#management.endpoints.web.enabled=true

# Active Spring profiles
#spring.profiles.active=production